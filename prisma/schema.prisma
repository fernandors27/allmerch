generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email    String       @id @db.VarChar(100)
  name     String       @db.VarChar(255)
  password String       @db.VarChar(255)
  address  String?
  role     String       @db.VarChar(10)
  charts   ChartOrder[]
  sessions Session[]

  @@map("users")
}

model Session {
  token      String @id @db.VarChar(255)
  email_user String @db.VarChar(100)
  user       User   @relation(fields: [email_user], references: [email])

  @@map("sessions")
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(50)
  merchandises Merchandise[]

  @@map("categories")
}

model Merchandise {
  id          String              @id @db.VarChar(50)
  id_category Int
  name        String              @db.VarChar(100)
  stock       Int
  price       Int
  image_url   String              @db.VarChar(255)
  charts      ChartOrder[]
  details     MerchandiseDetail[]
  category    Category            @relation(fields: [id_category], references: [id])

  @@map("merchandises")
}

model MerchandiseDetail {
  id             Int         @id @default(autoincrement())
  id_merchandise String      @db.VarChar(50)
  detail         String
  merchandise    Merchandise @relation(fields: [id_merchandise], references: [id])

  @@map("merchandise_details")
}

model ChartOrder {
  id             String      @id
  email_user     String      @db.VarChar(100)
  id_merchandise String      @db.VarChar(50)
  quantity       Int
  packing_cost   Int
  shipping_cost  Int
  total_cost     Int
  status_payment String      @db.VarChar(50)
  status_order   String      @db.VarChar(50)
  user           User        @relation(fields: [email_user], references: [email])
  merchandise    Merchandise @relation(fields: [id_merchandise], references: [id])

  @@map("chart_order")
}
